ggsave("errorbar.limma_voom2.svg", plot = pathway_errorbar, width = 20, height = 12, units = "in")
pathway_errorbar <- ggpicrust2::pathway_errorbar(abundance = ko_ab %>% column_to_rownames("function."),
daa_results_df = daa_annotated_limma_voom_method_results_df,
Group = metadata$Group, ko_to_kegg = FALSE,
p_values_threshold = 0.05, order = "group", select =c('K01956', 'K01992', 'K02003', 'K02004', 'K02013', 'K02015', 'K02016', 'K02028', 'K02049', 'K02050', 'K02057', 'K02313', 'K02314', 'K02338', 'K02355', 'K02356', 'K02358', 'K02428', 'K02469', 'K02470', 'K02495', 'K02508', 'K02511', 'K02529'),
p_value_bar = TRUE, colors = NULL, x_lab = "description")
ggsave("errorbar.limma_voom3.svg", plot = pathway_errorbar, width = 20, height = 12, units = "in")
pathway_errorbar(abundance = ko_ab %>% column_to_rownames("function."),
daa_results_df = daa_annotated_LinDA_method_results_df,
Group = metadata$Group, ko_to_kegg = FALSE,
p_values_threshold = 0.05, order = "group", select = NULL,
p_value_bar = TRUE, colors = NULL, x_lab = "description")
pathway_errorbar <- ggpicrust2::pathway_errorbar(abundance = ko_ab %>% column_to_rownames("function."),
daa_results_df = daa_annotated_LinDA_method_results_df,
Group = metadata$Group, ko_to_kegg = FALSE,
p_values_threshold = 0.05, order = "group", select = c('K00090', 'K00116', 'K00117', 'K00137', 'K00138', 'K00146', 'K00151', 'K00216', 'K00228', 'K00276', 'K00299', 'K00322', 'K00427', 'K00455', 'K00457', 'K00484', 'K00673', 'K00758', 'K00840', 'K00892', 'K00906', 'K00932', 'K01146', 'K01169', 'K01252', 'K01407', 'K01479', 'K01484', 'K01521', 'K01637'),
p_value_bar = TRUE, colors = NULL, x_lab = "description")
ggsave("errorbar.LinDA1.svg", plot = pathway_errorbar, width = 20, height = 12, units = "in")
pathway_errorbar <- ggpicrust2::pathway_errorbar(abundance = ko_ab %>% column_to_rownames("function."),
daa_results_df = daa_annotated_LinDA_method_results_df,
Group = metadata$Group, ko_to_kegg = FALSE,
p_values_threshold = 0.05, order = "group", select = c('K01669', 'K01690', 'K01782', 'K01825', 'K01826', 'K02062', 'K02063', 'K02064', 'K02167', 'K02255', 'K02299', 'K02317', 'K02336', 'K02345', 'K02364', 'K02466', 'K02467', 'K02468', 'K02485', 'K02508', 'K02511', 'K02562', 'K02565', 'K02609', 'K02610', 'K02611', 'K02612', 'K02613', 'K02615', 'K02616'),
p_value_bar = TRUE, colors = NULL, x_lab = "description")
ggsave("errorbar.LinDA2.svg", plot = pathway_errorbar, width = 20, height = 12, units = "in")
pathway_errorbar <- ggpicrust2::pathway_errorbar(abundance = ko_ab %>% column_to_rownames("function."),
daa_results_df = daa_annotated_LinDA_method_results_df,
Group = metadata$Group, ko_to_kegg = FALSE,
p_values_threshold = 0.05, order = "group", select = c('K02617', 'K02618', 'K02846', 'K02853', 'K02972', 'K03078', 'K03087', 'K03112', 'K03181', 'K03184', 'K03207', 'K03208', 'K03214', 'K03304', 'K03425', 'K03435', 'K03468', 'K03472', 'K03477', 'K03485', 'K03535', 'K03580', 'K03668', 'K03712'),
p_value_bar = TRUE, colors = NULL, x_lab = "description")
ggsave("errorbar.LinDA3.svg", plot = pathway_errorbar, width = 20, height = 12, units = "in")
# common pathways
pathway_errorbar <- ggpicrust2::pathway_errorbar(abundance = ko_ab %>% column_to_rownames("function."),
daa_results_df = daa_annotated_LinDA_method_results_df,
Group = metadata$Group, ko_to_kegg = FALSE,
p_values_threshold = 0.05, order = "group", select = c('K00228', 'K00455', 'K00276', 'K00151', 'K00758', 'K00457', 'K00484'),
p_value_bar = TRUE, colors = NULL, x_lab = "description")
ggsave("errorbar.LinDA.common.svg", plot = pathway_errorbar, width = 20, height = 12, units = "in")
# common pathways
pathway_errorbar <- ggpicrust2::pathway_errorbar(abundance = ko_ab %>% column_to_rownames("function."),
daa_results_df = daa_annotated_limma_voom_method_results_df,
Group = metadata$Group, ko_to_kegg = FALSE,
p_values_threshold = 0.05, order = "group", select =c('K00228', 'K00455', 'K00276', 'K00151', 'K00758', 'K00457', 'K00484'),
p_value_bar = TRUE, colors = NULL, x_lab = "description")
ggsave("errorbar.limma_voom.common.svg", plot = pathway_errorbar, width = 20, height = 12, units = "in")
# common pathways
pathway_errorbar <- ggpicrust2::pathway_errorbar(abundance = ko_ab %>% column_to_rownames("function."),
daa_results_df = daa_annotated_edgeR_method_results_df,
Group = metadata$Group, ko_to_kegg = FALSE,
p_values_threshold = 0.05, order = "group", select = c('K00228', 'K00455', 'K00276', 'K00151', 'K00758', 'K00457', 'K00484'),
p_value_bar = TRUE, colors = NULL, x_lab = "description")
ggsave("errorbar.edgeR.common.svg", plot = pathway_errorbar, width = 20, height = 12, units = "in")
# Generate pathway heatmap
# Please change column_to_rownames() to the feature column if you are not using example dataset
# Please change group to "your_group_column" if you are not using example dataset
feature_edgeR_with_p_0.05 <- daa_annotated_edgeR_method_results_df %>% filter(p_adjust < 0.05)
feature_limma_voom_with_p_0.05 <- daa_annotated_limma_voom_method_results_df %>% filter(p_adjust < 0.05)
feature_LinDA_with_p_0.05 <- daa_annotated_LinDA_method_results_df %>% filter(p_adjust < 0.05)
feature_edgeR_with_p_0.05
View(daa_results_Maaslin2_df)
pathway_heatmap(abundance = daa_annotated_edgeR_method_results_df %>%
filter(pathway %in% feature_edgeR_with_p_0.05$feature) %>% column_to_rownames("feature"),
metadata = metadata, group = "Group")
colnames(feature_edgeR_with_p_0.05)
colnames(daa_annotated_edgeR_method_results_df)
? pathway_heatmap
pathway_heatmap(abundance = ko_ab %>%
filter(pathway %in% feature_edgeR_with_p_0.05$feature) %>% column_to_rownames("function."),
metadata = metadata, group = "Group")
pathway_heatmap(abundance = ko_ab %>%
filter(function. %in% feature_edgeR_with_p_0.05$feature) %>% column_to_rownames("function."),
metadata = metadata, group = "Group")
feature_LinDA_with_p_0.05
row_number(feature_LinDA_with_p_0.05)
# Generate pathway PCA plot
# Please change column_to_rownames() to the feature column if you are not using example dataset
# Please change group to "your_group_column" if you are not using example dataset
pathway_pca(abundance = ko_ab %>% column_to_rownames("function."), metadata = metadata, group = "Group")
? pathway_pca
# Generate pathway PCA plot
# Please change column_to_rownames() to the feature column if you are not using example dataset
# Please change group to "your_group_column" if you are not using example dataset
abundance <- ko_ab[, apply(ko_ab, 2, var) != 0]
# Generate pathway PCA plot
# Please change column_to_rownames() to the feature column if you are not using example dataset
# Please change group to "your_group_column" if you are not using example dataset
# Exclude the first string column
ko_ab_numeric <- ko_ab[,-1]
# Select columns with non-zero variance
ko_ab_numeric <- ko_ab_numeric[, apply(ko_ab_numeric, 2, var) != 0]
# Combine the first string column and the selected numeric columns
ko_ab_filtered <- cbind(ko_ab[,1], ko_ab_numeric)
pathway_pca(abundance = ko_ab_filtered %>% column_to_rownames("function."), metadata = metadata, group = "Group")
ko_ab_filtered
# Generate pathway PCA plot
# Please change column_to_rownames() to the feature column if you are not using example dataset
# Please change group to "your_group_column" if you are not using example dataset
# Exclude the first string column and preserve the column names
ko_ab_numeric <- ko_ab[, -1, drop = FALSE]
# Get the indices of columns with non-zero variance
non_zero_var_cols <- apply(ko_ab_numeric, 2, var) != 0
# Select columns with non-zero variance and preserve the column names
ko_ab_numeric <- ko_ab_numeric[, non_zero_var_cols, drop = FALSE]
# Combine the first string column and the selected numeric columns
ko_ab_filtered <- cbind(ko_ab[, 1, drop = FALSE], ko_ab_numeric)
ko_ab_filtered
pathway_pca(abundance = ko_ab_filtered %>% column_to_rownames("function."), metadata = metadata, group = "Group")
? pathway_daa
? compare_daa_results
? pathway_daa
? pathway_errorbar
ko_ab
############################ Generate pathway heatmap ############################
# Please change column_to_rownames() to the feature column if you are not using example dataset
# Please change group to "your_group_column" if you are not using example dataset
feature_edgeR_with_p_0.05 <- daa_annotated_edgeR_method_results_df %>% filter(p_adjust < 0.05)
feature_limma_voom_with_p_0.05 <- daa_annotated_limma_voom_method_results_df %>% filter(p_adjust < 0.05)
feature_LinDA_with_p_0.05 <- daa_annotated_LinDA_method_results_df %>% filter(p_adjust < 0.05)
pathway_heatmap(abundance = ko_ab %>%
filter(function. %in% feature_edgeR_with_p_0.05$feature) %>%
column_to_rownames("function."),
metadata = metadata, group = "Group")
feature_edgeR_with_p_0.05
? pathway_heatmap
feature_edgeR_with_p_0.05
View(feature_edgeR_with_p_0.05)
selected_rows_edgeR <- feature_edgeR_with_p_0.05[feature_edgeR_with_p_0.05$feature %in% c('K00228', 'K00455', 'K00276', 'K00151',
'K00758', 'K00457', 'K00484'),]
View(selected_rows_edgeR)
pathway_heatmap(abundance = ko_ab %>%
filter(function. %in% selected_rows_edgeR$feature) %>%
column_to_rownames("function."),
metadata = metadata, group = "Group")
selected_rows_limma_voom <- feature_limma_voom_with_p_0.05[feature_limma_voom_with_p_0.05$feature %in% c('K00228', 'K00455', 'K00276', 'K00151',
'K00758', 'K00457', 'K00484'),]
selected_rows_limma_voom <- feature_limma_voom_with_p_0.05[feature_limma_voom_with_p_0.05$feature %in%
c('K00228', 'K00455', 'K00276', 'K00151',
'K00758', 'K00457', 'K00484'),]
selected_rows_LinDA <- feature_LinDA_with_p_0.05[feature_LinDA_with_p_0.05$feature %in%
c('K00228', 'K00455', 'K00276', 'K00151',
'K00758', 'K00457', 'K00484'),]
pathway_heatmap(abundance = ko_ab %>%
filter(function. %in% selected_rows_limma_voom$feature) %>%
column_to_rownames("function."),
metadata = metadata, group = "Group")
pathway_heatmap(abundance = ko_ab %>%
filter(function. %in% feature_edgeR_with_p_0.05$feature) %>%
column_to_rownames("function."),
metadata = metadata, group = "Group")
pathway_heatmap <- ggpicrust2::pathway_heatmap(abundance = ko_ab %>%
filter(function. %in% selected_rows_edgeR$feature) %>%
column_to_rownames("function."),
metadata = metadata, group = "Group")
ggsave("KO DA/pathway heatmap/heatmap.common.svg", plot = pathway_errorbar, width = 20, height = 12, units = "in")
ggsave("KO DA/pathway heatmap/heatmap.common.svg", plot = pathway_heatmap, width = 20, height = 12, units = "in")
ggsave("KO DA/pathway heatmap/heatmap.edgeR.svg", plot = pathway_heatmap, width = 20, height = 12, units = "in")
pathway_heatmap <- ggpicrust2::pathway_heatmap(abundance = ko_ab %>%
filter(function. %in% feature_edgeR_with_p_0.05$feature) %>%
column_to_rownames("function."),
metadata = metadata, group = "Group")
ggsave("KO DA/pathway heatmap/heatmap.edgeR.svg", plot = pathway_heatmap, width = 20, height = 12, units = "in")
# limma_voom
pathway_heatmap <- ggpicrust2::pathway_heatmap(abundance = ko_ab %>%
filter(function. %in% feature_limma_voom_with_p_0.05$feature) %>%
column_to_rownames("function."),
metadata = metadata, group = "Group")
pathway_heatmap
ggsave("KO DA/pathway heatmap/heatmap.limma_voom.svg", plot = pathway_heatmap, width = 20, height = 12, units = "in")
# LinDA
pathway_heatmap <- ggpicrust2::pathway_heatmap(abundance = ko_ab %>%
filter(function. %in% feature_LinDA_with_p_0.05$feature) %>%
column_to_rownames("function."),
metadata = metadata, group = "Group")
ggsave("KO DA/pathway heatmap/heatmap.LinDA.svg", plot = pathway_heatmap, width = 20, height = 12, units = "in")
pathway_pca(abundance = kko_ab %>%
filter(function. %in% feature_LinDA_with_p_0.05$feature) %>%
column_to_rownames("function."), metadata = metadata, group = "Group")
pathway_pca(abundance = ko_ab %>%
filter(function. %in% feature_LinDA_with_p_0.05$feature) %>%
column_to_rownames("function."), metadata = metadata, group = "Group")
# LinDA
pathway_pcs <- ggpicrust2::pathway_pca(abundance = ko_ab %>%
filter(function. %in% feature_LinDA_with_p_0.05$feature) %>%
column_to_rownames("function."), metadata = metadata, group = "Group")
ggsave("KO DA/PCA/pca.LinDA.svg", plot = pathway_heatmap, width = 20, height = 12, units = "in")
# LinDA
pathway_pca <- ggpicrust2::pathway_pca(abundance = ko_ab %>%
filter(function. %in% feature_LinDA_with_p_0.05$feature) %>%
column_to_rownames("function."), metadata = metadata, group = "Group")
# LinDA
pathway_pca <- ggpicrust2::pathway_pca(abundance = ko_ab %>%
filter(function. %in% feature_LinDA_with_p_0.05$feature) %>%
column_to_rownames("function."), metadata = metadata, group = "Group")
ggsave("KO DA/PCA/pca.LinDA.svg", plot = pathway_pca, width = 20, height = 12, units = "in")
# limma_voom
pathway_pca <- ggpicrust2::pathway_pca(abundance = ko_ab %>%
filter(function. %in% feature_limma_voom_with_p_0.05$feature) %>%
column_to_rownames("function."), metadata = metadata, group = "Group")
ggsave("KO DA/PCA/pca.limma_voom.svg", plot = pathway_pca, width = 20, height = 12, units = "in")
# edgeR
pathway_pca <- ggpicrust2::pathway_pca(abundance = ko_ab %>%
filter(function. %in% feature_edgeR_with_p_0.05$feature) %>%
column_to_rownames("function."), metadata = metadata, group = "Group")
ggsave("KO DA/PCA/pca.edgeR.svg", plot = pathway_pca, width = 20, height = 12, units = "in")
# common pathways
pathway_pca <- ggpicrust2::pathway_pca(abundance = ko_ab %>%
filter(function. %in% selected_rows_edgeR$feature) %>%
column_to_rownames("function."), metadata = metadata, group = "Group")
ggsave("KO DA/PCA/pca.common.svg", plot = pathway_pca, width = 20, height = 12, units = "in")
library(readr)
library(ggpicrust2)
library(ggplot2)
library(tibble)
library(tidyverse)
library(ggprism)
library(patchwork)
library(ggh4x)
# Read metadata
metadata <- read.table("filtered_metadata.tsv", header = TRUE, sep = "\t",
row.names = NULL)
# ko abundance
metacyc_ab <- read.table("filtered_MetaCyc_pred_metagenome_unstrat.tsv, header = TRUE,
e
egvrgtg
""
"
# ko abundance
metacyc_ab <- read.table("filtered_MetaCyc_pred_metagenome_unstrat.tsv", header = TRUE,
sep = "\t", row.names = NULL)
############################ Perform pathway DAA ############################
# Perform pathway DAA using edgeR method
daa_results_edgeR_df <- pathway_daa(abundance = metacyc_ab %>% column_to_rownames("pathway"),
metadata = metadata, group = "Group",
daa_method = "edgeR", select = NULL, reference = NULL)
# Perform pathway DAA using LinDA method
daa_results_LinDA_df <- pathway_daa(abundance = metacyc_ab %>% column_to_rownames("pathway"),
metadata = metadata, group = "Group",
daa_method = "LinDA", select = NULL, reference = NULL)
# Perform pathway DAA using limma voom method
daa_results_limma_voom_df <- pathway_daa(abundance = metacyc_ab %>% column_to_rownames("pathway"),
metadata = metadata, group = "Group",
daa_method = "limma voom", select = NULL, reference = NULL)
############################ Annotate pathway ############################
# Annotate pathway results without KO to KEGG conversion
daa_annotated_edgeR_method_results_df <- pathway_annotation(pathway = "MetaCyc",
daa_results_df = daa_results_edgeR_df,
ko_to_kegg = FALSE)
daa_annotated_LinDA_method_results_df <- pathway_annotation(pathway = "MetaCyc",
daa_results_df = daa_results_LinDA_df,
ko_to_kegg = FALSE)
daa_annotated_limma_voom_method_results_df <- pathway_annotation(pathway = "MetaCyc",
daa_results_df = daa_results_limma_voom_df,
ko_to_kegg = FALSE)
# write to tsv
write.table(daa_annotated_edgeR_method_results_df,
"MetaCyc DA/annotated_da_edgeR.tsv", sep = "\t", row.names = FALSE,
quote = FALSE)
write.table(daa_annotated_LinDA_method_results_df,
"MetaCyc DA/annotated_da_LinDA.tsv", sep = "\t", row.names = FALSE,
quote = FALSE)
write.table(daa_annotated_limma_voom_method_results_df,
"MetaCyc DA/annotated_da_limma_voom.tsv", sep = "\t", row.names = FALSE,
quote = FALSE)
############################ Generate pathway error bar plot ############################
# Please change column_to_rownames() to the feature column
# Please change Group to metadata$your_group_column if you are not using example dataset
# edgeR
pathway_errorbar <- ggpicrust2::pathway_errorbar(abundance = metacyc_ab %>% column_to_rownames("pathway"),
daa_results_df = daa_annotated_edgeR_method_results_df,
Group = metadata$Group, ko_to_kegg = FALSE,
p_values_threshold = 0.05, order = "group",
select = NULL,
p_value_bar = TRUE, colors = NULL, x_lab = "description")
############################ Generate pathway error bar plot ############################
# Please change column_to_rownames() to the feature column
# Please change Group to metadata$your_group_column if you are not using example dataset
# edgeR
pathway_errorbar <- ggpicrust2::pathway_errorbar(abundance = metacyc_ab %>% column_to_rownames("pathway"),
daa_results_df = daa_annotated_edgeR_method_results_df,
Group = metadata$Group, ko_to_kegg = FALSE,
p_values_threshold = 0.05, order = "group",
select = c('3-HYDROXYPHENYLACETATE-DEGRADATION-PWY',
'AEROBACTINSYN-PWY', 'ALL-CHORISMATE-PWY',
'ARGDEG-PWY', 'AST-PWY', 'CATECHOL-ORTHO-CLEAVAGE-PWY',
'CHLOROPHYLL-SYN', 'CRNFORCAT-PWY', 'ECASYN-PWY',
'ENTBACSYN-PWY', 'GALLATE-DEGRADATION-I-PWY',
'GALLATE-DEGRADATION-II-PWY',
'GLYCOLYSIS-TCA-GLYOX-BYPASS', 'HCAMHPDEG-PWY',
'KETOGLUCONMET-PWY', 'METHYLGALLATE-DEGRADATION-PWY',
'NADSYN-PWY', 'ORNARGDEG-PWY', 'ORNDEG-PWY', 'P105-PWY', 'PROTOCATECHUATE-ORTHO-CLEAVAGE-PWY', 'PWY-1541', 'PWY-1622', 'PWY-181', 'PWY-5088', 'PWY-5180', 'PWY-5181', 'PWY-5182', 'PWY-5415', 'PWY-5417'),
p_value_bar = TRUE, colors = NULL, x_lab = "description")
ggsave("MetaCyc DA/Error Bar/errorbar.edgeR1.svg", plot = pathway_errorbar, width = 20, height = 12, units = "in")
ggsave("MetaCyc DA//Error Bar/errorbar.edgeR1.svg", plot = pathway_errorbar, width = 20, height = 12, units = "in")
ggsave("MetaCyc DA/Error Bar/errorbar.edgeR1.svg", plot = pathway_errorbar, width = 20, height = 12, units = "in")
pathway_errorbar
ggsave("MetaCyc DA/Error Bar/errorbar.edgeR1.svg", plot = pathway_errorbar, width = 20, height = 12, units = "in")
pathway_errorbar <- ggpicrust2::pathway_errorbar(abundance = metacyc_ab %>% column_to_rownames("pathway"),
daa_results_df = daa_annotated_edgeR_method_results_df,
Group = metadata$Group, ko_to_kegg = FALSE,
p_values_threshold = 0.05, order = "group",
select = c('PWY-5431', 'PWY-5531', 'PWY-5651', 'PWY-6071',
'PWY-6143', 'PWY-6182', 'PWY-6185', 'PWY-6562',
'PWY-6690', 'PWY-7159', 'PWY-7373', 'PWY-7446',
'PWY-7644', 'PWY0-1277', 'PWY0-321',
'TCA-GLYOX-BYPASS', 'THREOCAT-PWY', 'TYRFUMCAT-PWY',
'VALDEG-PWY'), p_value_bar = TRUE,
colors = NULL, x_lab = "description")
ggsave("MetaCyc DA/Error Bar/errorbar.edgeR2.svg", plot = pathway_errorbar, width = 20, height = 12, units = "in")
# limma voom
pathway_errorbar <- ggpicrust2::pathway_errorbar(abundance = metacyc_ab %>% column_to_rownames("pathway"),
daa_results_df = daa_annotated_limma_voom_method_results_df,
Group = metadata$Group, ko_to_kegg = FALSE,
p_values_threshold = 0.05, order = "group",
select =NULL, p_value_bar = TRUE,
colors = NULL, x_lab = "description")
# LinDA
pathway_errorbar <- ggpicrust2::pathway_errorbar(abundance = metacyc_ab %>% column_to_rownames("pathway"),
daa_results_df = daa_annotated_LinDA_method_results_df,
Group = metadata$Group, ko_to_kegg = FALSE,
p_values_threshold = 0.05, order = "group",
select = NULL,
p_value_bar = TRUE, colors = NULL, x_lab = "description")
? pathway_daa
daa_results_LinDA_df <- pathway_daa(abundance = metacyc_ab %>% column_to_rownames("pathway"),
metadata = metadata, group = "Group",
daa_method = "DESeq2", select = NULL, reference = NULL)
# LinDA
pathway_errorbar <- ggpicrust2::pathway_errorbar(abundance = metacyc_ab %>% column_to_rownames("pathway"),
daa_results_df = daa_annotated_LinDA_method_results_df,
Group = metadata$Group, ko_to_kegg = FALSE,
p_values_threshold = 0.05, order = "group",
select = NULL,
p_value_bar = TRUE, colors = NULL, x_lab = "description")
daa_results_LinDA_df <- pathway_daa(abundance = metacyc_ab %>% column_to_rownames("pathway"),
metadata = metadata, group = "Group",
daa_method = "metagenomeSeq", select = NULL, reference = NULL)
# LinDA
pathway_errorbar <- ggpicrust2::pathway_errorbar(abundance = metacyc_ab %>% column_to_rownames("pathway"),
daa_results_df = daa_annotated_LinDA_method_results_df,
Group = metadata$Group, ko_to_kegg = FALSE,
p_values_threshold = 0.05, order = "group",
select = NULL,
p_value_bar = TRUE, colors = NULL, x_lab = "description")
daa_results_LinDA_df <- pathway_daa(abundance = metacyc_ab %>% column_to_rownames("pathway"),
metadata = metadata, group = "Group",
daa_method = "Lefse", select = NULL, reference = NULL)
daa_results_LinDA_df <- pathway_daa(abundance = metacyc_ab %>% column_to_rownames("pathway"),
metadata = metadata, group = "Group",
daa_method = "ALDEx2", select = NULL, reference = NULL)
daa_results_LinDA_df <- daa_results_LinDA_df[daa_results_LinDA_df$method == "ALDEx2_Wilcoxon rank test", ]
# LinDA
pathway_errorbar <- ggpicrust2::pathway_errorbar(abundance = metacyc_ab %>% column_to_rownames("pathway"),
daa_results_df = daa_annotated_LinDA_method_results_df,
Group = metadata$Group, ko_to_kegg = FALSE,
p_values_threshold = 0.05, order = "group",
select = NULL,
p_value_bar = TRUE, colors = NULL, x_lab = "description")
pathway_errorbar <- ggpicrust2::pathway_errorbar(abundance = metacyc_ab %>% column_to_rownames("pathway"),
daa_results_df = daa_annotated_edgeR_method_results_df,
Group = metadata$Group, ko_to_kegg = FALSE,
p_values_threshold = 0.001, order = "group",
select = NULL, p_value_bar = TRUE,
colors = NULL, x_lab = "description")
############################ Generate pathway heatmap ############################
# Please change column_to_rownames() to the feature column if you are not using example dataset
# Please change group to "your_group_column" if you are not using example dataset
feature_edgeR_with_p_0.05 <- daa_annotated_edgeR_method_results_df %>% filter(p_adjust < 0.05)
selected_rows_edgeR <- feature_edgeR_with_p_0.05[feature_edgeR_with_p_0.05$feature %in%
c('3-HYDROXYPHENYLACETATE-DEGRADATION-PWY',
'AEROBACTINSYN-PWY', 'ALL-CHORISMATE-PWY',
'ARGDEG-PWY', 'AST-PWY', 'CATECHOL-ORTHO-CLEAVAGE-PWY',
'CHLOROPHYLL-SYN', 'CRNFORCAT-PWY', 'ECASYN-PWY',
'ENTBACSYN-PWY', 'GALLATE-DEGRADATION-I-PWY',
'GALLATE-DEGRADATION-II-PWY', 'GLYCOLYSIS-TCA-GLYOX-BYPASS',
'HCAMHPDEG-PWY', 'KETOGLUCONMET-PWY',
'METHYLGALLATE-DEGRADATION-PWY', 'NADSYN-PWY',
'ORNARGDEG-PWY', 'ORNDEG-PWY', 'P105-PWY',
'PROTOCATECHUATE-ORTHO-CLEAVAGE-PWY', 'PWY-1541',
'PWY-1622', 'PWY-181', 'PWY-5088', 'PWY-5180',
'PWY-5181', 'PWY-5182', 'PWY-5415', 'PWY-5417',
'PWY-5431', 'PWY-5531', 'PWY-5651', 'PWY-6071',
'PWY-6143', 'PWY-6182', 'PWY-6185', 'PWY-6562',
'PWY-6690', 'PWY-7159', 'PWY-7373', 'PWY-7446',
'PWY-7644', 'PWY0-1277', 'PWY0-321', 'TCA-GLYOX-BYPASS',
'THREOCAT-PWY', 'TYRFUMCAT-PWY', 'VALDEG-PWY'),]
# common pathways
pathway_heatmap <- ggpicrust2::pathway_heatmap(abundance = metacyc_ab %>%
filter(pathway %in% selected_rows_edgeR$feature) %>%
column_to_rownames("pathway"),
metadata = metadata, group = "Group")
# edgeR
pathway_heatmap <- ggpicrust2::pathway_heatmap(abundance = metacyc_ab %>%
filter(pathway %in% feature_edgeR_with_p_0.05$feature) %>%
column_to_rownames("pathway"),
metadata = metadata, group = "Group")
ggsave("MetaCyc DA/pathway heatmap/heatmap.edgeR.svg", plot = pathway_heatmap, width = 20, height = 12, units = "in")
ggsave("MetaCyc DA/pathway heatmap/heatmap.edgeR.svg", plot = pathway_heatmap, width = 20, height = 12, units = "in")
feature_edgeR_with_p_0.05$feature
list(feature_edgeR_with_p_0.05$feature)
feature_edgeR_with_p_0.05$feature[[1]]
c(feature_edgeR_with_p_0.05$feature)
# common pathways
pathway_heatmap <- ggpicrust2::pathway_heatmap(abundance = metacyc_ab %>%
filter(pathway %in% selected_rows_edgeR$feature) %>%
column_to_rownames("pathway"),
metadata = metadata, group = "Group")
ggsave("MetaCyc DA/pathway heatmap/heatmap.common.svg", plot = pathway_heatmap, width = 20, height = 12, units = "in")
# edgeR
pathway_pca <- ggpicrust2::pathway_pca(abundance = metacyc_ab %>%
filter(pathway %in% feature_edgeR_with_p_0.05$feature) %>%
column_to_rownames("pathway"), metadata = metadata, group = "Group")
ggsave("MetaCyc DA/PCA/pca.edgeR.svg", plot = pathway_pca, width = 20, height = 12, units = "in")
library(readr)
library(ggpicrust2)
library(ggplot2)
library(tibble)
library(tidyverse)
library(ggprism)
library(patchwork)
library(ggh4x)
# Read metadata
metadata <- read.table("filtered_metadata.tsv", header = TRUE, sep = "\t",
row.names = NULL)
# EC abundance
ec_ab <- read.table(gzfile("../process/EC_metagenome_out//pred_metagenome_unstrat.tsv.gz"),
header = TRUE, sep = "\t", row.names = NULL)
# Read metadata
metadata <- read.csv("../grouping.csv")
# Remove rows where Group is NA
metadata <- metadata[!is.na(metadata$Group), ]
# EC abundance
ec_ab <- read.table(gzfile("../process/EC_metagenome_out//pred_metagenome_unstrat.tsv.gz"),
header = TRUE, sep = "\t", row.names = NULL)
# KO abundance
ko_ab <- read.table(gzfile("../process/KO_metagenome_out/pred_metagenome_unstrat.tsv.gz"),
header = TRUE, sep = "\t", row.names = NULL)
# MetaCyc pathway abundance
MetaCyc_ab <- read.table(gzfile("../process/pathways_out/path_abun_unstrat.tsv.gz"),
header = TRUE, sep = "\t", row.names = NULL)
# removing samples not in metadata (samples with NA label)
keep_samples <- metadata$SampleID
View(ec_ab)
View(ko_ab)
ec_ab <- ec_ab[, colnames(ec_ab) %in% c("function.", keep_samples)]
# Subset data to only the columns you want to keep
ko_ab <- ko_ab[, colnames(ko_ab) %in% c("function.", keep_samples)]
ec_ab <- ec_ab[, colnames(ec_ab) %in% c("function.", keep_samples)]
MetaCyc_ab <- MetaCyc_ab[, colnames(MetaCyc_ab) %in% c("pathway", keep_samples)]
# EC abundance
write.table(ko_ab, "filtered_EC_pred_metagenome_unstrat.tsv", sep = "\t",
row.names = FALSE, quote = FALSE)
# ko abundance
ec_ab <- read.table("filtered_EC_pred_metagenome_unstrat.tsv", header = TRUE,
sep = "\t", row.names = NULL)
############################ Perform pathway DAA ############################
# Perform pathway DAA using edgeR method
daa_results_edgeR_df <- pathway_daa(abundance = ec_ab %>% column_to_rownames("function."),
metadata = metadata, group = "Group",
daa_method = "edgeR", select = NULL, reference = NULL)
# Perform pathway DAA using LinDA method
daa_results_LinDA_df <- pathway_daa(abundance = ec_ab %>% column_to_rownames("function."),
metadata = metadata, group = "Group",
daa_method = "LinDA", select = NULL, reference = NULL)
# Perform pathway DAA using limma voom method
daa_results_limma_voom_df <- pathway_daa(abundance = ec_ab %>% column_to_rownames("function."),
metadata = metadata, group = "Group",
daa_method = "limma voom", select = NULL, reference = NULL)
############################ Annotate pathway ############################
# Annotate pathway results without KO to KEGG conversion
daa_annotated_edgeR_method_results_df <- pathway_annotation(pathway = "KO",
daa_results_df = daa_results_edgeR_df,
ko_to_kegg = FALSE)
? pathway_annotation
############################ Annotate pathway ############################
# Annotate pathway results without KO to KEGG conversion
daa_annotated_edgeR_method_results_df <- pathway_annotation(pathway = "EC",
daa_results_df = daa_results_edgeR_df,
ko_to_kegg = FALSE)
# Read metadata
metadata <- read.table("filtered_metadata.tsv", header = TRUE, sep = "\t",
row.names = NULL)
# ko abundance
ec_ab <- read.table("filtered_EC_pred_metagenome_unstrat.tsv", header = TRUE,
sep = "\t", row.names = NULL)
############################ Perform pathway DAA ############################
# Perform pathway DAA using edgeR method
daa_results_edgeR_df <- pathway_daa(abundance = ec_ab %>% column_to_rownames("function."),
metadata = metadata, group = "Group",
daa_method = "edgeR", select = NULL, reference = NULL)
# Perform pathway DAA using LinDA method
daa_results_LinDA_df <- pathway_daa(abundance = ec_ab %>% column_to_rownames("function."),
metadata = metadata, group = "Group",
daa_method = "LinDA", select = NULL, reference = NULL)
# Perform pathway DAA using limma voom method
daa_results_limma_voom_df <- pathway_daa(abundance = ec_ab %>% column_to_rownames("function."),
metadata = metadata, group = "Group",
daa_method = "limma voom", select = NULL, reference = NULL)
############################ Annotate pathway ############################
# Annotate pathway results without KO to KEGG conversion
daa_annotated_edgeR_method_results_df <- pathway_annotation(pathway = "EC",
daa_results_df = daa_results_edgeR_df,
ko_to_kegg = FALSE)
daa_results_edgeR_df
############################ Annotate pathway ############################
# Annotate pathway results without KO to KEGG conversion
daa_annotated_edgeR_method_results_df <- pathway_annotation(pathway = "EC",
daa_results_df = daa_results_edgeR_df,
ko_to_kegg = FALSE)
############################ Annotate pathway ############################
# Annotate pathway results without KO to KEGG conversion
daa_annotated_edgeR_method_results_df <- pathway_annotation(pathway = "MetaCyc",
daa_results_df = daa_results_edgeR_df,
ko_to_kegg = FALSE)
